name: Dify
services:
  api:
    image: langgenius/dify-api:0.6.13
    container_name: dify-api
    restart: unless-stopped
    environment:
      MODE: api
      LOG_LEVEL: INFO
      SECRET_KEY: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      CONSOLE_WEB_URL: 'http://localhost:3001'
      INIT_PASSWORD: 'admin'
      CONSOLE_API_URL: 'http://localhost:3001'
      SERVICE_API_URL: 'http://localhost:3001'
      APP_WEB_URL: 'http://localhost:3001'
      FILES_URL: ''
      FILES_ACCESS_TIMEOUT: 300
      MIGRATION_ENABLED: 'true'
      DB_USERNAME: postgres
      DB_PASSWORD: difyai123456
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: dify
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: ''
      REDIS_PASSWORD: difyai123456
      REDIS_USE_SSL: 'false'
      REDIS_DB: 0
      CELERY_BROKER_URL: redis://:difyai123456@redis:6379/1
      WEB_API_CORS_ALLOW_ORIGINS: '*'
      CONSOLE_CORS_ALLOW_ORIGINS: '*'
      STORAGE_TYPE: local
      STORAGE_LOCAL_PATH: storage
      VECTOR_STORE: weaviate
      WEAVIATE_ENDPOINT: http://weaviate:8080
      WEAVIATE_API_KEY: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      CODE_EXECUTION_ENDPOINT: "http://sandbox:8194"
      CODE_EXECUTION_API_KEY: dify-sandbox
      CODE_MAX_NUMBER: 9223372036854775807
      CODE_MIN_NUMBER: -9223372036854775808
      CODE_MAX_STRING_LENGTH: 80000
      TEMPLATE_TRANSFORM_MAX_LENGTH: 80000
      CODE_MAX_STRING_ARRAY_LENGTH: 30
      CODE_MAX_OBJECT_ARRAY_LENGTH: 30
      CODE_MAX_NUMBER_ARRAY_LENGTH: 1000
      SSRF_PROXY_HTTP_URL: 'http://ssrf_proxy:3128'
      SSRF_PROXY_HTTPS_URL: 'http://ssrf_proxy:3128'
      INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH: 1000
    depends_on:
      - db
      - redis
    volumes:
      - /DATA/AppData/dify/app/storage:/app/api/storage
    networks:
      - ssrf_proxy_network
      - dify

  worker:
    image: langgenius/dify-api:0.6.13
    container_name: dify-worker
    restart: unless-stopped
    environment:
      MODE: worker
      LOG_LEVEL: INFO
      SECRET_KEY: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      CONSOLE_WEB_URL: 'http://localhost:3001'
      INIT_PASSWORD: 'admin'
      CONSOLE_API_URL: 'http://localhost:3001'
      SERVICE_API_URL: 'http://localhost:3001'
      APP_WEB_URL: 'http://localhost:3001'
      FILES_URL: ''
      FILES_ACCESS_TIMEOUT: 300
      MIGRATION_ENABLED: 'true'
      DB_USERNAME: postgres
      DB_PASSWORD: difyai123456
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: dify
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: ''
      REDIS_PASSWORD: difyai123456
      REDIS_USE_SSL: 'false'
      REDIS_DB: 0
      CELERY_BROKER_URL: redis://:difyai123456@redis:6379/1
      WEB_API_CORS_ALLOW_ORIGINS: '*'
      CONSOLE_CORS_ALLOW_ORIGINS: '*'
      STORAGE_TYPE: local
      STORAGE_LOCAL_PATH: storage
      VECTOR_STORE: weaviate
      WEAVIATE_ENDPOINT: http://weaviate:8080
      WEAVIATE_API_KEY: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      CODE_EXECUTION_ENDPOINT: "http://sandbox:8194"
      CODE_EXECUTION_API_KEY: dify-sandbox
      CODE_MAX_NUMBER: 9223372036854775807
      CODE_MIN_NUMBER: -9223372036854775808
      CODE_MAX_STRING_LENGTH: 80000
      TEMPLATE_TRANSFORM_MAX_LENGTH: 80000
      CODE_MAX_STRING_ARRAY_LENGTH: 30
      CODE_MAX_OBJECT_ARRAY_LENGTH: 30
      CODE_MAX_NUMBER_ARRAY_LENGTH: 1000
      SSRF_PROXY_HTTP_URL: 'http://ssrf_proxy:3128'
      SSRF_PROXY_HTTPS_URL: 'http://ssrf_proxy:3128'
      INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH: 1000
    depends_on:
      - db
      - redis
    volumes:
      - /DATA/AppData/dify/app/storage:/app/api/storage
    networks:
      - ssrf_proxy_network
      - dify

  web:
    image: langgenius/dify-web:0.6.13
    container_name: dify-web
    restart: unless-stopped
    environment:
      CONSOLE_API_URL: 'http://localhost:3001'
      APP_API_URL: 'http://localhost:3001'
    deploy:
      resources:
        reservations:
          memory: 2048M
    ports:
      - "3001:3000"
    networks:
      - dify

  db:
    image: postgres:15-alpine
    container_name: dify-db
    restart: unless-stopped
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: difyai123456
      POSTGRES_DB: dify
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /DATA/AppData/dify/db/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - dify

  redis:
    image: redis:6-alpine
    container_name: dify-redis
    restart: unless-stopped
    volumes:
      - /DATA/AppData/dify/redis/data:/data
    command: redis-server --requirepass difyai123456
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    networks:
      - dify

  # The Weaviate vector store.
  weaviate:
    image: semitechnologies/weaviate:1.19.0
    container_name: dify-weaviate
    restart: unless-stopped
    volumes:
      - /DATA/AppData/dify/weaviate:/var/lib/weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: 'WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih'
      AUTHENTICATION_APIKEY_USERS: 'hello@dify.ai'
      AUTHORIZATION_ADMINLIST_ENABLED: 'true'
      AUTHORIZATION_ADMINLIST_USERS: 'hello@dify.ai'
    networks:
      - dify

  sandbox:
    image: langgenius/dify-sandbox:0.2.1
    container_name: dify-sandbox
    restart: unless-stopped
    environment:
      API_KEY: dify-sandbox
      GIN_MODE: 'release'
      WORKER_TIMEOUT: 15
      ENABLE_NETWORK: 'true'
      HTTP_PROXY: 'http://ssrf_proxy:3128'
      HTTPS_PROXY: 'http://ssrf_proxy:3128'
      SANDBOX_PORT: 8194
    volumes:
      - /DATA/AppData/dify/sandbox/dependencies:/dependencies
    networks:
      - ssrf_proxy_network

  ssrf_proxy:
    image: ubuntu/squid:latest
    container_name: dify-ssrf_proxy
    restart: unless-stopped
    volumes:
      - /DATA/AppData/dify/ssrf_proxy/squid.conf:/etc/squid/squid.conf
    networks:
      - ssrf_proxy_network
      - dify

  nginx:
    image: nginx:latest
    container_name: dify-nginx
    restart: unless-stopped
    volumes:
      - /DATA/AppData/dify/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /DATA/AppData/dify/nginx/proxy.conf:/etc/nginx/proxy.conf
      - /DATA/AppData/dify/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - api
      - web
    ports:
      - "3001:80"
    networks:
      - dify
    
networks:
  ssrf_proxy_network:
    driver: bridge
    internal: true
  dify:
    name: dify

x-casaos:
  architectures:
    - amd64
  main: web
  developer: langgenius
  category: Chat
  description:
    en_us: Dify is an open-source large language model (LLM) application development platform. It combines the concepts of Backend-as-a-Service and LLMOps to enable developers to quickly build production-grade generative AI applications. Even non-technical personnel can participate in the definition and data operations of AI applications.
    en_uk: Dify is an open-source large language model (LLM) application development platform. It combines the concepts of Backend-as-a-Service and LLMOps to enable developers to quickly build production-grade generative AI applications. Even non-technical personnel can participate in the definition and data operations of AI applications.
    zh_cn: Dify 是一款开源的大语言模型(LLM) 应用开发平台。它融合了后端即服务（Backend as Service）和 LLMOps 的理念，使开发者可以快速搭建生产级的生成式 AI 应用。即使你是非技术人员，也能参与到 AI 应用的定义和数据运营过程中。
    ja_jp: Difyはオープンソースの大規模言語モデル（LLM）開発プラットフォームです。Backend as ServiceとLLMOpsの理念を融合し、開発者が迅速に生成AIアプリケーションを構築できるようにします。技術者でなくても、AIアプリケーションの定義やデータ運用に参加することができます。
  icon: https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/icon.png
  screenshot_link:
    - https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/screenshot-1.png 
  tagline:
    en_us: Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.
    en_uk: Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.
    zh_cn: Dify 是一个开源的 LLM 应用开发平台。其直观的界面结合了 AI 工作流、RAG 管道、Agent、模型管理、可观测性功能等，让您可以快速从原型到生产。
    ja_jp: DifyはオープンソースのLLMアプリケーション開発プラットフォームです。直感的なインターフェイスには、AIワークフロー、RAGパイプライン、エージェント機能、モデル管理、観測機能などが組み合わさっており、プロトタイプから生産まで迅速に進めることができます。
  title:
    en_us: Dify
    en_uk: Dify
    zh_cn: Dify
    ja_jp: Dify
  index: /
  tips:
    before_install:
     en_us: |
      ### 1 Prepare the necessary configuration files and directories.
      ```shell
      curl -fsSL  https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/pre-install.sh | sh
      ```

      ### 2 Setting the access port (recommended)

      The application uses port `3001` by default, which you can change in the `nginx` service.

      ### 3 Configure the service address (recommended)

      Modify the following environment variables to your address `http://yourhost:3001` with the same port as in 2.

      - `api` service
        - APP_WEB_URL
        - CONSOLE_API_URL
        - CONSOLE_WEB_URL
        - SERVICE_API_URL
        - SERVICE_API_URL
      - `dify` service
        - APP_API_URL
        - CONSOLE_API_URL
    en_uk: |
      ### 1 Prepare the necessary configuration files and directories.
      ```shell
      curl -fsSL  https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/pre-install.sh | sh
      ```

      ### 2 Setting the access port (recommended)

      The application uses port `3001` by default, which you can change in the `nginx` service.

      ### 3 Configure the service address (recommended)

      Modify the following environment variables to your address `http://yourhost:3001` with the same port as in 2.

      - `api` service
        - APP_WEB_URL
        - CONSOLE_API_URL
        - CONSOLE_WEB_URL
        - SERVICE_API_URL
        - SERVICE_API_URL
      - `web` service
        - APP_API_URL
        - CONSOLE_API_URL
    zh_cn: |
      ### 1 准备必要的配置文件和目录。

      ```shell
      curl -fsSL  https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/pre-install.sh | sh
      ```

      ### 2 设置访问端口（推荐）

      应用默认使用端口 `3001`，您可以在 `nginx` 服务中更改。

      ### 3 配置服务地址（推荐）

      将以下环境变量修改为您的地址 `http://yourhost:3001`，端口与第 2 步相同。

      - `api` 服务
        - APP_WEB_URL
        - CONSOLE_API_URL
        - CONSOLE_WEB_URL
        - SERVICE_API_URL
        - SERVICE_API_URL
      - `web` 服务
        - APP_API_URL
        - CONSOLE_API_URL
    
    ja_jp: |
      ### 1 必要な設定ファイルとディレクトリを準備します。

      ```shell
      curl -fsSL  https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/pre-install.sh | sh
      ```

      ### 2 アクセスポートを設定します（推奨）

      アプリケーションはデフォルトでポート `3001` を使用しています。`nginx` サービスで変更できます。

      ### 3 サービスアドレスを設定します（推奨）

      以下の環境変数を、2 で設定したポートと同じ `http://yourhost:3001` に変更してください。

      - `api` サービス
        - APP_WEB_URL
        - CONSOLE_API_URL
        - CONSOLE_WEB_URL
        - SERVICE_API_URL
        - SERVICE_API_URL
      - `web` サービス
        - APP_API_URL
        - CONSOLE_API_URL