name: dify
services:
  api:
    image: langgenius/dify-api:0.6.13
    container_name: dify-api
    restart: unless-stopped
    environment:
      MODE: api
      LOG_LEVEL: INFO
      SECRET_KEY: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      CONSOLE_WEB_URL: '10.0.0.85:5001'
      INIT_PASSWORD: 'admin'
      CONSOLE_API_URL: '10.0.0.85:5001'
      SERVICE_API_URL: '10.0.0.85:5001'
      APP_WEB_URL: ''
      FILES_URL: ''
      FILES_ACCESS_TIMEOUT: 300
      APP_MAX_ACTIVE_REQUESTS: 0
      MIGRATION_ENABLED: 'true'
      DB_USERNAME: postgres
      DB_PASSWORD: difyai123456
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: dify
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: ''
      REDIS_PASSWORD: difyai123456
      REDIS_USE_SSL: 'false'
      REDIS_DB: 0
      CELERY_BROKER_URL: redis://:difyai123456@redis:6379/1
      WEB_API_CORS_ALLOW_ORIGINS: '*'
      CONSOLE_CORS_ALLOW_ORIGINS: '*'
      STORAGE_TYPE: local
      STORAGE_LOCAL_PATH: storage
      VECTOR_STORE: weaviate
      WEAVIATE_ENDPOINT: http://weaviate:8080
      WEAVIATE_API_KEY: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      CODE_EXECUTION_ENDPOINT: "http://sandbox:8194"
      CODE_EXECUTION_API_KEY: dify-sandbox
      CODE_MAX_NUMBER: 9223372036854775807
      CODE_MIN_NUMBER: -9223372036854775808
      CODE_MAX_STRING_LENGTH: 80000
      TEMPLATE_TRANSFORM_MAX_LENGTH: 80000
      CODE_MAX_STRING_ARRAY_LENGTH: 30
      CODE_MAX_OBJECT_ARRAY_LENGTH: 30
      CODE_MAX_NUMBER_ARRAY_LENGTH: 1000
      SSRF_PROXY_HTTP_URL: 'http://ssrf_proxy:3128'
      SSRF_PROXY_HTTPS_URL: 'http://ssrf_proxy:3128'
      INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH: 1000
    depends_on:
      - db
      - redis
    volumes:
      - /DATA/AppData/$AppID/data/app/storage:/app/api/storage
    networks:
      - dify_network
      - default

  worker:
    image: langgenius/dify-api:0.6.13
    container_name: dify-worker
    restart: unless-stopped
    environment:
      MODE: worker
      LOG_LEVEL: INFO
      SECRET_KEY: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
      CONSOLE_WEB_URL: '10.0.0.85:5001'
      INIT_PASSWORD: 'admin'
      CONSOLE_API_URL: '10.0.0.85:5001'
      SERVICE_API_URL: '10.0.0.85:5001'
      APP_WEB_URL: ''
      FILES_URL: ''
      FILES_ACCESS_TIMEOUT: 300
      APP_MAX_ACTIVE_REQUESTS: 0
      MIGRATION_ENABLED: 'true'
      DB_USERNAME: postgres
      DB_PASSWORD: difyai123456
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: dify
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: ''
      REDIS_PASSWORD: difyai123456
      REDIS_USE_SSL: 'false'
      REDIS_DB: 0
      CELERY_BROKER_URL: redis://:difyai123456@redis:6379/1
      WEB_API_CORS_ALLOW_ORIGINS: '*'
      CONSOLE_CORS_ALLOW_ORIGINS: '*'
      STORAGE_TYPE: local
      STORAGE_LOCAL_PATH: storage
      VECTOR_STORE: weaviate
      WEAVIATE_ENDPOINT: http://weaviate:8080
      WEAVIATE_API_KEY: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
      CODE_EXECUTION_ENDPOINT: "http://sandbox:8194"
      CODE_EXECUTION_API_KEY: dify-sandbox
      CODE_MAX_NUMBER: 9223372036854775807
      CODE_MIN_NUMBER: -9223372036854775808
      CODE_MAX_STRING_LENGTH: 80000
      TEMPLATE_TRANSFORM_MAX_LENGTH: 80000
      CODE_MAX_STRING_ARRAY_LENGTH: 30
      CODE_MAX_OBJECT_ARRAY_LENGTH: 30
      CODE_MAX_NUMBER_ARRAY_LENGTH: 1000
      SSRF_PROXY_HTTP_URL: 'http://ssrf_proxy:3128'
      SSRF_PROXY_HTTPS_URL: 'http://ssrf_proxy:3128'
      INDEXING_MAX_SEGMENTATION_TOKENS_LENGTH: 1000
    depends_on:
      - db
      - redis
    volumes:
      - /DATA/AppData/$AppID/data/app/storage:/app/api/storage
    networks:
      - dify_network
      - default

  dify:
    image: langgenius/dify-web:0.6.13
    container_name: dify-web
    restart: unless-stopped
    environment:
      CONSOLE_API_URL: "10.0.0.85:5001"
      APP_API_URL: "10.0.0.85:5001"


  db:
    image: postgres:15-alpine
    container_name: dify-db
    restart: unless-stopped
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: difyai123456
      POSTGRES_DB: dify
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /DATA/AppData/$AppID/data/db/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1s
      timeout: 3s
      retries: 30

  redis:
    image: redis:6-alpine
    container_name: dify-redis
    restart: unless-stopped
    volumes:
      - /DATA/AppData/$AppID/data/redis/data:/data
    command: redis-server --requirepass difyai123456
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  weaviate:
    image: semitechnologies/weaviate:1.19.0
    container_name: dify-weaviate
    restart: unless-stopped
    volumes:
      - /DATA/AppData/$AppID/data/weaviate:/var/lib/weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: 'WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih'
      AUTHENTICATION_APIKEY_USERS: 'hello@dify.ai'
      AUTHORIZATION_ADMINLIST_ENABLED: 'true'
      AUTHORIZATION_ADMINLIST_USERS: 'hello@dify.ai'

  sandbox:
    image: langgenius/dify-sandbox:0.2.1
    container_name: dify-sandbox
    restart: unless-stopped
    environment:
      API_KEY: dify-sandbox
      GIN_MODE: 'release'
      WORKER_TIMEOUT: 15
      ENABLE_NETWORK: 'true'
      HTTP_PROXY: 'http://ssrf_proxy:3128'
      HTTPS_PROXY: 'http://ssrf_proxy:3128'
      SANDBOX_PORT: 8194
    volumes:
      - /DATA/AppData/$AppID/data/sandbox/dependencies:/dependencies
    networks:
      - dify_network
    configs:
      - source: dependencies
        target: /dependencies

  ssrf_proxy:
    image: ubuntu/squid:latest
    container_name: dify-ssrf_proxy
    restart: unless-stopped
    volumes:
      - /DATA/AppData/$AppID/data/ssrf_proxy/squid.conf:/etc/squid/squid.conf
    networks:
      - dify_network
      - default
    configs:
      - source: squid_conf
        target: /etc/squid/squid.conf

  nginx:
    image: nginx:latest
    container_name: dify-nginx
    restart: unless-stopped
    volumes:
      - /DATA/AppData/$AppID/data/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /DATA/AppData/$AppID/data/nginx/proxy.conf:/etc/nginx/proxy.conf
      - /DATA/AppData/$AppID/data/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - dify
    ports:
      - "3000:80"
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
      - source: nginx_proxy_conf
        target: /etc/nginx/proxy.conf
      - source: nginx_conf_d
        target: /etc/nginx/conf.d/default.conf
  

networks:
  dify_network:
    driver: bridge
    internal: true

configs:
  nginx_conf:
    content: >
      user  nginx;
      worker_processes  auto;

      error_log  /var/log/nginx/error.log notice;
      pid        /var/run/nginx.pid;


      events {
          worker_connections  1024;
      }


      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;

          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

          access_log  /var/log/nginx/access.log  main;

          sendfile        on;
          #tcp_nopush     on;

          keepalive_timeout  65;

          #gzip  on;
          client_max_body_size 15M;

          include /etc/nginx/conf.d/*.conf;
      }
  nginx_proxy_conf:
    content: >
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_buffering off;
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
  nginx_conf_d:
    content: >
      server {
          listen 80;
          server_name _;

          location /console/api {
            proxy_pass http://api:5001;
            include proxy.conf;
          }

          location /api {
            proxy_pass http://api:5001;
            include proxy.conf;
          }

          location /v1 {
            proxy_pass http://api:5001;
            include proxy.conf;
          }

          location /files {
            proxy_pass http://api:5001;
            include proxy.conf;
          }

          location / {
            proxy_pass http://dify:3000;
            include proxy.conf;
          }

          # If you want to support HTTPS, please uncomment the code snippet below
          #listen 443 ssl;
          #ssl_certificate ./../ssl/your_cert_file.cer;
          #ssl_certificate_key ./../ssl/your_cert_key.key;
          #ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
          #ssl_prefer_server_ciphers on;
          #ssl_session_cache shared:SSL:10m;
          #ssl_session_timeout 10m;
      }
  squid_conf:
    content: >
      acl localnet src 0.0.0.1-0.255.255.255	# RFC 1122 "this" network (LAN)
      acl localnet src 10.0.0.0/8		# RFC 1918 local private network (LAN)
      acl localnet src 100.64.0.0/10		# RFC 6598 shared address space (CGN)
      acl localnet src 169.254.0.0/16 	# RFC 3927 link-local (directly plugged) machines
      acl localnet src 172.16.0.0/12		# RFC 1918 local private network (LAN)
      acl localnet src 192.168.0.0/16		# RFC 1918 local private network (LAN)
      acl localnet src fc00::/7       	# RFC 4193 local private network range
      acl localnet src fe80::/10      	# RFC 4291 link-local (directly plugged) machines
      acl SSL_ports port 443
      acl Safe_ports port 80		# http
      acl Safe_ports port 21		# ftp
      acl Safe_ports port 443		# https
      acl Safe_ports port 70		# gopher
      acl Safe_ports port 210		# wais
      acl Safe_ports port 1025-65535	# unregistered ports
      acl Safe_ports port 280		# http-mgmt
      acl Safe_ports port 488		# gss-http
      acl Safe_ports port 591		# filemaker
      acl Safe_ports port 777		# multiling http
      acl CONNECT method CONNECT
      http_access deny !Safe_ports
      http_access deny CONNECT !SSL_ports
      http_access allow localhost manager
      http_access deny manager
      http_access allow localhost
      include /etc/squid/conf.d/*.conf
      http_access deny all

      ################################## Proxy Server ################################
      http_port 3128
      coredump_dir /var/spool/squid
      refresh_pattern ^ftp:		1440	20%	10080
      refresh_pattern ^gopher:	1440	0%	1440
      refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
      refresh_pattern \/(Packages|Sources)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
      refresh_pattern \/Release(|\.gpg)$ 0 0% 0 refresh-ims
      refresh_pattern \/InRelease$ 0 0% 0 refresh-ims
      refresh_pattern \/(Translation-.*)(|\.bz2|\.gz|\.xz)$ 0 0% 0 refresh-ims
      refresh_pattern .		0	20%	4320

      # upstream proxy, set to your own upstream proxy IP to avoid SSRF attacks
      # cache_peer 172.1.1.1 parent 3128 0 no-query no-digest no-netdb-exchange default 


      ################################## Reverse Proxy To Sandbox ################################
      http_port 8194 accel vhost
      cache_peer sandbox parent 8194 0 no-query originserver
      acl src_all src all
      http_access allow src_all
  dependencies:
    content: |

x-casaos:
  architectures:
    - arm64
    - amd64
  main: dify
  author: IceWhaleTech
  developer: LangGenius
  category: Chat
  description:
    en_us: Dify is an open-source large language model (LLM) application development platform. It combines the concepts of Backend-as-a-Service and LLMOps to enable developers to quickly build production-grade generative AI applications. Even non-technical personnel can participate in the definition and data operations of AI applications.
    en_uk: Dify is an open-source large language model (LLM) application development platform. It combines the concepts of Backend-as-a-Service and LLMOps to enable developers to quickly build production-grade generative AI applications. Even non-technical personnel can participate in the definition and data operations of AI applications.
    zh_cn: Dify 是一款开源的大语言模型(LLM) 应用开发平台。它融合了后端即服务（Backend as Service）和 LLMOps 的理念，使开发者可以快速搭建生产级的生成式 AI 应用。即使你是非技术人员，也能参与到 AI 应用的定义和数据运营过程中。
    ja_jp: Difyはオープンソースの大規模言語モデル（LLM）開発プラットフォームです。Backend as ServiceとLLMOpsの理念を融合し、開発者が迅速に生成AIアプリケーションを構築できるようにします。技術者でなくても、AIアプリケーションの定義やデータ運用に参加することができます。
  icon: https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/icon.png
  screenshot_link:
    - https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/Dify/screenshot-1.png 
  tagline:
    en_us: Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.
    en_uk: Dify is an open-source LLM app development platform. Dify's intuitive interface combines AI workflow, RAG pipeline, agent capabilities, model management, observability features and more, letting you quickly go from prototype to production.
    zh_cn: Dify 是一个开源的 LLM 应用开发平台。其直观的界面结合了 AI 工作流、RAG 管道、Agent、模型管理、可观测性功能等，让您可以快速从原型到生产。
    ja_jp: DifyはオープンソースのLLMアプリケーション開発プラットフォームです。直感的なインターフェイスには、AIワークフロー、RAGパイプライン、エージェント機能、モデル管理、観測機能などが組み合わさっており、プロトタイプから生産まで迅速に進めることができます。
  title:
    en_us: Dify
  index: /
  port_map: "3000"
  tips:
    before_install:
      en_us: |
        