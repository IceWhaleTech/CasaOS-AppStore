name: mineos-node
# Base file from: https://github.com/hexparrot/mineos-node/blob/master/docker-compose.yml

services:
  mineos:
    image: hexparrot/mineos:latest
    container_name: mineos_server
    networks:
      - mineos
    restart: unless-stopped

    # Adjust as needed; if this is too short, stopping the container
    # may corrupt map data
    stop_grace_period: 10m

    volumes:
      # Using a bind mapping is preferrable here due to how docker
      # stores names volumes by default in /var/lib/docker/volumes
      # with permissions that prevent normal users from accessing
      # the folder structure.
      - /var/games/mineos/minecraft:/var/games/minecraft

    environment:
      # Should the web interface use HTTPS or HTTP?
      # Valid entries are "true" and "false" (with quotes)
      USE_HTTPS: "true"

      # What port should the web interface listen on?
      # This is independant of the USE_HTTPS setting.
      SERVER_PORT: 8443

      # On startup, mineos will check if an account of this name exists.
      # If it does not exist, one will be created. This account, and
      # any other created with this variable will be permitted to login
      # to the web interface.
      USER_NAME: mc

      # If the account listed above does not already exist, when mineos
      # creates it, it will do so with UID. If an account with this UID
      # already exists, account creation will be aborted.
      USER_UID: 1000

      # If the account is being created, it will use either the password
      # set below, or a random, 20 character password will generated for
      # you and displayed in the console log. After first launch, you
      # should check the log.
      USER_PASSWORD: random_see_log

    ports:
      # HTTPS port for web interface. If you change the SERVER_PORT
      # variable, also change this mapping.
      - "8443:8443/tcp"

      # Minecraft server ports. 25565 is the default, but is you plan
      # on running multiple servers at the same time, each will need
      # a unique port unless you are using bungiecord.
      # Expand this range as needed.
      - "25565-25570:25565-25570/tcp"
      - "25565-25570:25565-25570/udp"

    x-casaos:
      ports:
        - container: "8443"
          description:
            en_us: WebUI HTTP Port
          protocol: tcp

        - container: "25565"
          description:
            en_us: Minecraft listening Port (TCP)
          protocol: tcp

        - container: "25566"
          description:
            en_us: Minecraft listening Port (TCP)
          protocol: tcp

        - container: "25567"
          description:
            en_us: Minecraft listening Port (TCP)
          protocol: tcp

        - container: "25568"
          description:
            en_us: Minecraft listening Port (TCP)
          protocol: tcp

        - container: "25569"
          description:
            en_us: Minecraft listening Port (TCP)
          protocol: tcp

        - container: "25570"
          description:
            en_us: Minecraft listening Port (TCP)
          protocol: tcp

        - container: "25565"
          description:
            en_us: Minecraft listening Port (UDP)
          protocol: udp

        - container: "25566"
          description:
            en_us: Minecraft listening Port (UDP)
          protocol: udp

        - container: "25567"
          description:
            en_us: Minecraft listening Port (UDP)
          protocol: udp

        - container: "25568"
          description:
            en_us: Minecraft listening Port (UDP)
          protocol: udp

        - container: "25569"
          description:
            en_us: Minecraft listening Port (UDP)
          protocol: udp

        - container: "25570"
          description:
            en_us: Minecraft listening Port (UDP)
          protocol: udp

      volumes:
        - container: /var/games/minecraft
          description:
            en_us: MineOS directory.
x-casaos:
  architectures:
    - amd64
    - arm
    - arm64
  main: mineos
  author: Chàra Rose
  category: Games
  description:
    en_us: MineOS is a server front-end to ease managing Minecraft administrative tasks. This iteration using Node.js aims to enhance previous MineOS scripts (Python-based), by leveraging the event-triggering, asyncronous model of Node.JS and websockets.
    es_es: MineOS es una interfaz de servidor para facilitar la gestión de las tareas administrativas de Minecraft. Esta iteración que utiliza Node.js tiene como objetivo mejorar los scripts anteriores de MineOS (basados en Python), aprovechando el modelo asincrónico de activación de eventos de Node.JS y websockets.
  developer: hexparrot
  icon: https://cdn.jsdelivr.net/gh/IceWhaleTech/CasaOS-AppStore@main/Apps/MineOS/icon.png
  tagline:
    en_us: Free and easy to use Minecraft server management tool.
    es_es: Herramienta de administración de servidores de Minecraft gratuita y fácil de usar.
  tips: {}
  title:
    en_us: MineOS
  index: /admin/index.html
  port_map: "8443"

volumes:
  mineos_data:

networks:
  mineos: